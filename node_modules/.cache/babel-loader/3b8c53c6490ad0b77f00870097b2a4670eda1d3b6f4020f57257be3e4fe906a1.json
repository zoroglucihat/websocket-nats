{"ast":null,"code":"var _jsxFileName = \"/Users/cihat.zoroglu/playground/nats-ws/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { connect, StringCodec } from \"nats.ws\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  useEffect(() => {\n    const connectToNats = async () => {\n      try {\n        // NATS sunucusuna bağlan\n        const nc = await connect({\n          servers: \"wss://roundhouse.proxy.rlwy.net:20839/nats\",\n          // Sunucu adresinizi güncelleyin\n          debug: true,\n          // Daha fazla bilgi için debug seçeneği\n          ignoreServerUpdates: true // Cluster'da otomatik bağlantı için bu gerekli olabilir\n        });\n        console.log(\"Connected to NATS!\");\n\n        // String codec oluştur\n        const sc = StringCodec();\n\n        // 'test.subject' konusunu dinle\n        const sub = nc.subscribe(\"test.subject\");\n        console.log(\"Subscribed to 'test.subject'\");\n\n        // Gelen mesajları işleme\n        for await (const msg of sub) {\n          console.log(`Received message: ${sc.decode(msg.data)}`);\n        }\n      } catch (error) {\n        console.error(\"Error connecting to NATS:\", error);\n      }\n    };\n    connectToNats();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"NATS WebSocket Test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Listening to NATS messages...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","connect","StringCodec","jsxDEV","_jsxDEV","App","_s","connectToNats","nc","servers","debug","ignoreServerUpdates","console","log","sc","sub","subscribe","msg","decode","data","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/cihat.zoroglu/playground/nats-ws/src/App.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { connect, StringCodec } from \"nats.ws\";\n\nfunction App() {\n  useEffect(() => {\n    const connectToNats = async () => {\n      try {\n        // NATS sunucusuna bağlan\n        const nc = await connect({\n          servers: \"wss://roundhouse.proxy.rlwy.net:20839/nats\", // Sunucu adresinizi güncelleyin\n          debug: true, // Daha fazla bilgi için debug seçeneği\n          ignoreServerUpdates: true, // Cluster'da otomatik bağlantı için bu gerekli olabilir\n        });\n        console.log(\"Connected to NATS!\");\n\n        // String codec oluştur\n        const sc = StringCodec();\n\n        // 'test.subject' konusunu dinle\n        const sub = nc.subscribe(\"test.subject\");\n        console.log(\"Subscribed to 'test.subject'\");\n\n        // Gelen mesajları işleme\n        for await (const msg of sub) {\n          console.log(`Received message: ${sc.decode(msg.data)}`);\n        }\n      } catch (error) {\n        console.error(\"Error connecting to NATS:\", error);\n      }\n    };\n\n    connectToNats();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>NATS WebSocket Test</h1>\n        <p>Listening to NATS messages...</p>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,OAAO,EAAEC,WAAW,QAAQ,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACbN,SAAS,CAAC,MAAM;IACd,MAAMO,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF;QACA,MAAMC,EAAE,GAAG,MAAMP,OAAO,CAAC;UACvBQ,OAAO,EAAE,4CAA4C;UAAE;UACvDC,KAAK,EAAE,IAAI;UAAE;UACbC,mBAAmB,EAAE,IAAI,CAAE;QAC7B,CAAC,CAAC;QACFC,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;;QAEjC;QACA,MAAMC,EAAE,GAAGZ,WAAW,CAAC,CAAC;;QAExB;QACA,MAAMa,GAAG,GAAGP,EAAE,CAACQ,SAAS,CAAC,cAAc,CAAC;QACxCJ,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;;QAE3C;QACA,WAAW,MAAMI,GAAG,IAAIF,GAAG,EAAE;UAC3BH,OAAO,CAACC,GAAG,CAAC,qBAAqBC,EAAE,CAACI,MAAM,CAACD,GAAG,CAACE,IAAI,CAAC,EAAE,CAAC;QACzD;MACF,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdR,OAAO,CAACQ,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD;IACF,CAAC;IAEDb,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEH,OAAA;IAAKiB,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBlB,OAAA;MAAQiB,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAC5BlB,OAAA;QAAAkB,QAAA,EAAI;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC5BtB,OAAA;QAAAkB,QAAA,EAAG;MAA6B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACpB,EAAA,CAvCQD,GAAG;AAAAsB,EAAA,GAAHtB,GAAG;AAyCZ,eAAeA,GAAG;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}