{"ast":null,"code":"var _jsxFileName = \"/Users/cihat.zoroglu/playground/nats-ws/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport React, { useEffect } from 'react';\nimport { connect, StringCodec } from 'nats.ws';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  useEffect(() => {\n    const connectToNats = async () => {\n      try {\n        // NATS sunucusuna bağlan\n        const nc = await connect({\n          servers: \"wss://roundhouse.proxy.rlwy.net:20839\"\n        }); // NATS WebSocket URL'ini buraya yazın\n        console.log(\"Connected to NATS!\");\n\n        // String codec oluştur\n        const sc = StringCodec();\n\n        // 'test.subject' konusunu dinle\n        const sub = nc.subscribe('test.subject');\n        for await (const msg of sub) {\n          console.log(`Received a message: ${sc.decode(msg.data)}`);\n        }\n      } catch (error) {\n        console.error(\"Error connecting to NATS:\", error);\n      }\n    };\n    connectToNats();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"NATS WebSocket Test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Listening to NATS messages...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 7\n  }, this);\n}\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","React","useEffect","connect","StringCodec","jsxDEV","_jsxDEV","App","_s","connectToNats","nc","servers","console","log","sc","sub","subscribe","msg","decode","data","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/cihat.zoroglu/playground/nats-ws/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport React, { useEffect } from 'react';\nimport { connect, StringCodec } from 'nats.ws';\n\nfunction App() {\n  useEffect(() => {\n    const connectToNats = async () => {\n      try {\n        // NATS sunucusuna bağlan\n        const nc = await connect({ servers: \"wss://roundhouse.proxy.rlwy.net:20839\" }); // NATS WebSocket URL'ini buraya yazın\n        console.log(\"Connected to NATS!\");\n\n        // String codec oluştur\n        const sc = StringCodec();\n\n        // 'test.subject' konusunu dinle\n        const sub = nc.subscribe('test.subject');\n        for await (const msg of sub) {\n          console.log(`Received a message: ${sc.decode(msg.data)}`);\n        }\n      } catch (error) {\n        console.error(\"Error connecting to NATS:\", error);\n      }\n    };\n\n    connectToNats();\n  }, []);\n\n  return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>NATS WebSocket Test</h1>\n          <p>Listening to NATS messages...</p>\n        </header>\n      </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAOC,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,OAAO,EAAEC,WAAW,QAAQ,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACbN,SAAS,CAAC,MAAM;IACd,MAAMO,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF;QACA,MAAMC,EAAE,GAAG,MAAMP,OAAO,CAAC;UAAEQ,OAAO,EAAE;QAAwC,CAAC,CAAC,CAAC,CAAC;QAChFC,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;;QAEjC;QACA,MAAMC,EAAE,GAAGV,WAAW,CAAC,CAAC;;QAExB;QACA,MAAMW,GAAG,GAAGL,EAAE,CAACM,SAAS,CAAC,cAAc,CAAC;QACxC,WAAW,MAAMC,GAAG,IAAIF,GAAG,EAAE;UAC3BH,OAAO,CAACC,GAAG,CAAC,uBAAuBC,EAAE,CAACI,MAAM,CAACD,GAAG,CAACE,IAAI,CAAC,EAAE,CAAC;QAC3D;MACF,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdR,OAAO,CAACQ,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD;IACF,CAAC;IAEDX,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIH,OAAA;IAAKe,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBhB,OAAA;MAAQe,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAC5BhB,OAAA;QAAAgB,QAAA,EAAI;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC5BpB,OAAA;QAAAgB,QAAA,EAAG;MAA6B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEZ;AAAClB,EAAA,CAhCQD,GAAG;AAAAoB,EAAA,GAAHpB,GAAG;AAkCZ,eAAeA,GAAG;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}